<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Python on ZephyrBD&#39;s Blog</title>
        <link>https://zephyrbd.github.io/categories/python/</link>
        <description>Recent content in Python on ZephyrBD&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>ZephyrBD</copyright>
        <lastBuildDate>Sun, 19 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://zephyrbd.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>变量的定义、注释和字符详解</title>
        <link>https://zephyrbd.github.io/p/pythondev_2/</link>
        <pubDate>Sun, 19 Jan 2025 00:00:00 +0000</pubDate>
        
        <guid>https://zephyrbd.github.io/p/pythondev_2/</guid>
        <description>&lt;img src="https://zephyrbd.github.io/images/Pydev/dev2/img0.png" alt="Featured image of post 变量的定义、注释和字符详解" /&gt;&lt;h2 id=&#34;变量定义和赋值&#34;&gt;变量定义和赋值
&lt;/h2&gt;&lt;h3 id=&#34;变量的概念&#34;&gt;变量的概念
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;什么是变量：&lt;/strong&gt; 变量是编程中的基本概念，用于存储数据和在程序中进行各种操作。它们是程序中用于保存和处理信息的“容器”。&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev2/img1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;容器&#34;
	
	
&gt;&lt;br&gt;
&lt;strong&gt;变量的作用：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;存储数据：&lt;/strong&gt; 变量可以存储用户输入的数据、计算结果、中间数据等。例如，用户输入的年龄、计算出的总和、读取的文件内容等都可以存储在变量中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;引用数据：&lt;/strong&gt; 通过变量名可以在程序的不同部分引用或访问存储的数据。变量名是对存储在内存中数据的引用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类型灵活：&lt;/strong&gt; 在 Python 中，变量可以存储各种类型的数据，如整数、浮点数、字符串、列表、字典等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS：在Python中，定义变量基本变量一般不给出变量类型的定义，Python会自动根据变量被赋的值进行判断。&lt;/p&gt;
&lt;h3 id=&#34;变量赋值&#34;&gt;变量赋值
&lt;/h3&gt;&lt;p&gt;将&lt;strong&gt;数据&lt;/strong&gt;放入&lt;strong&gt;变量&lt;/strong&gt;保存的过程叫做赋值&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev2/img2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;赋值&#34;
	
	
&gt;&lt;br&gt;
PS:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这里的等号=叫做赋值运算符。&lt;/li&gt;
&lt;li&gt;所有的编程语言都是用=作为赋值运算符。&lt;/li&gt;
&lt;li&gt;python中，变量的定义和赋值是在一条语句中实现的。&lt;/li&gt;
&lt;li&gt;=的左边叫做左值，=的右边叫做右值。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;# 给变量赋值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;# 具体的值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;age1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;# 变量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;age2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 表达式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;一个变量被声明后，在其后的代码中就可以使用了，可以参与运算，可以赋值给其他变量，也可以作为参数传给某个函数。&lt;/p&gt;
&lt;h3 id=&#34;变量的命名规则&#34;&gt;变量的命名规则
&lt;/h3&gt;&lt;p&gt;在编程中，变量的命名规则非常重要，遵守这些规则可以避免语法错误，并提高代码的可读性和可维护性。以下是 Python 变量命名时必须遵守的规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;变量名由字母、数字和下划线组成
&lt;ul&gt;
&lt;li&gt;变量名只能包含 字母（a-z, A-Z）、数字（0-9） 和 下划线（_）。&lt;/li&gt;
&lt;li&gt;Python 区分大小写，因此 name 和 Name 是两个不同的变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ZehyrBD&amp;#34;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 正确&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;_age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;# 正确&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ffl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.35&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 正确&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;变量名不能以数字开头
&lt;ul&gt;
&lt;li&gt;变量名必须以字母或下划线开头，不能以数字开头。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 错误，不能数字开头&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sex1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 正确，数字在字母之后&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;变量名不能是 Python 的关键字
&lt;ul&gt;
&lt;li&gt;Python 的关键字是保留用于特殊用途的单词，不能用作变量名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 错误，&amp;#39;def&amp;#39; 是关键字&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 错误，&amp;#39;for&amp;#39; 是关键字&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;python中的关键字保留字&#34;&gt;Python中的关键字(保留字)
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;（或保留字）是 Python 内部设计时预留的具有特定功能的单词。这些关键字在 Python 代码中具有特殊含义，用来表示特定的操作或语法结构。因此，&lt;strong&gt;关键字不能被用作变量名、函数名或任何其他标识符&lt;/strong&gt;，否则会导致语法错误。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如何查看 Python 的关键字列表
Python 提供了一个内置的 keyword 模块，可以用来查看当前版本 Python 中的所有关键字。你可以使用以下代码来打印出这些关键字：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;keyword&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;keyword&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwlist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;当你运行上面的代码时，将会输出 Python 当前版本中所有的关键字列表。以下是 Python 3中的关键字示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[&amp;#39;False&amp;#39;, &amp;#39;None&amp;#39;, &amp;#39;True&amp;#39;, &amp;#39;and&amp;#39;, &amp;#39;as&amp;#39;, &amp;#39;assert&amp;#39;, &amp;#39;async&amp;#39;, &amp;#39;await&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &amp;#39;break&amp;#39;, &amp;#39;class&amp;#39;, &amp;#39;continue&amp;#39;, &amp;#39;def&amp;#39;, &amp;#39;del&amp;#39;, &amp;#39;elif&amp;#39;, &amp;#39;else&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &amp;#39;except&amp;#39;, &amp;#39;finally&amp;#39;, &amp;#39;for&amp;#39;, &amp;#39;from&amp;#39;, &amp;#39;global&amp;#39;, &amp;#39;if&amp;#39;, &amp;#39;import&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &amp;#39;in&amp;#39;, &amp;#39;is&amp;#39;, &amp;#39;lambda&amp;#39;, &amp;#39;nonlocal&amp;#39;, &amp;#39;not&amp;#39;, &amp;#39;or&amp;#39;, &amp;#39;pass&amp;#39;, &amp;#39;raise&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &amp;#39;return&amp;#39;, &amp;#39;try&amp;#39;, &amp;#39;while&amp;#39;, &amp;#39;with&amp;#39;, &amp;#39;yield&amp;#39;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Python 关键字列表解析
以下是一些常用关键字及其基本功能：
&lt;ul&gt;
&lt;li&gt;控制流关键字：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elif&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;：用于条件判断。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;：用于循环。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;：用于控制循环的执行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;try&lt;/code&gt;, &lt;code&gt;except&lt;/code&gt;, &lt;code&gt;finally&lt;/code&gt;, &lt;code&gt;raise&lt;/code&gt;：用于异常处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;定义和声明关键字：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;def&lt;/code&gt;：用于定义函数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;：用于定义类。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lambda&lt;/code&gt;：用于定义匿名函数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;import&lt;/code&gt;, &lt;code&gt;from&lt;/code&gt;：用于导入模块。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;逻辑运算关键字：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;：用于逻辑运算。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;is&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;：用于比较运算。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其他常见关键字：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;return&lt;/code&gt;：用于从函数返回值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yield&lt;/code&gt;：用于生成器函数，返回一个值并暂停函数的执行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;global&lt;/code&gt;, &lt;code&gt;nonlocal&lt;/code&gt;：用于声明变量的作用域。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;True&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;None&lt;/code&gt;：布尔值和空值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;注意事项&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;无需死记硬背：Python 的关键字数量有限（大约 35 个），这些关键字会在你编写代码时频繁使用。虽然刚开始可能需要查询关键字的具体功能，但随着编程经验的积累，你会逐渐熟悉这些关键字，并自然记住它们。因此，不需要刻意去死记硬背，反复练习和实际编程会帮助你掌握它们。&lt;/li&gt;
&lt;li&gt;避免使用关键字作为变量名：如果不小心使用了关键字作为变量名，Python 会报语法错误。&lt;br&gt;
例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 这是非法的，会导致语法错误&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;关键字是区分大小写的：例如，True 是关键字，但 true 不是关键字，可以作为变量名使用。
通过理解并熟悉这些关键字，你将能够更有效地编写 Python 代码。随着编程经验的增长，你会逐渐内化这些关键字的用法。&lt;/p&gt;
&lt;h3 id=&#34;变量命名风格的建议规范&#34;&gt;变量命名风格的建议（规范）
&lt;/h3&gt;&lt;p&gt;在遵守变量命名规则的前提下，变量的命名尽量要见名知意，一般使用英文单词，忌用拼音&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;见名知意&lt;br&gt;
变量的命名应尽量清晰明确，能够反映其用途或包含的数据。避免使用与实际用途不符的名字。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Good Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ZephyrBD&amp;#34;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 变量名清楚地表明其保存的是名字&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# 变量名清楚地表明其保存的是年龄&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;total_price&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 变量名清楚地表明其保存的是总价&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bad Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mingzi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ZephyrBD&amp;#34;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 使用拼音命名，容易引起困惑，不符合国际化编程习惯&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ZephyrBD&amp;#34;&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;# 变量名过于简短，无法清楚表达含义&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;tp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;              &lt;span class=&#34;c1&#34;&gt;# 变量名不清晰，不易理解其含义&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;使用英文单词&lt;br&gt;
尽量使用标准的英文单词来命名变量，而不是拼音或缩写。这能提高代码的可读性。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Good Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;180&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;# 使用英文单词&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;birth_date&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1990-01-01&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bad Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;gao&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;180&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;# 使用拼音，不利于他人理解&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;birthD&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1990-01-01&amp;#34;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 使用缩写，容易造成混淆&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;使用下划线分隔单词（蛇形命名法 | 下划线命名法）&lt;br&gt;
对于多个单词组成的变量名，使用下划线 &lt;code&gt;_&lt;/code&gt; 分隔每个单词，以增强可读性。这种命名方式称为“蛇形命名法”（snake_case），是 Python 社区推荐的命名风格。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Good Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;first_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;John&amp;#34;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 单词之间使用下划线分隔&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;total_amount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bad Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;firstname&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;John&amp;#34;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 单词直接连接，降低可读性&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;totalAmount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;500&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# 使用驼峰命名法，不符合 Python 规范&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;避免使用保留字和内置函数名&lt;br&gt;
不要使用 Python 的保留字或内置函数名作为变量名，以免引起错误或困惑。&lt;br&gt;
保留字：&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;except&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;, &lt;code&gt;from&lt;/code&gt; 等。
内置函数名：&lt;code&gt;list&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;print&lt;/code&gt;, &lt;code&gt;len&lt;/code&gt; 等。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Good Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;my_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 避免与内置函数名 `list` 冲突&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;# 避免使用 `sum` 作为变量名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bad Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 覆盖了内置函数 `list`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# 覆盖了内置函数 `sum`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;保持命名风格一致
在同一个项目或模块中，保持变量命名风格的一致性非常重要。不要混合使用不同的命名风格（如蛇形命名法与驼峰命名法）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Good Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;user_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Alice&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;user_age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;total_amount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bad Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;userName&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Alice&amp;#34;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 驼峰命名法&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;user_age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;# 蛇形命名法&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;totalAmount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 驼峰命名法&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;变量命名长度适中
变量名不宜过长或过短，过长会影响书写和阅读，过短则不利于理解。命名时，应在表达清晰和简洁之间取得平衡。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Good Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;product_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Laptop&amp;#34;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 长度适中，含义明确&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;999&lt;/span&gt;               &lt;span class=&#34;c1&#34;&gt;# 简短且清晰&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bad Example：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;999&lt;/span&gt;                   &lt;span class=&#34;c1&#34;&gt;# 过于简短，含义不明确&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;name_of_the_product_we_sold&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Laptop&amp;#34;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 过长，冗余&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;通过遵循这些变量命名的建议和规范，可以大大提高代码的可读性、可维护性和专业性。这是非常重要的。&lt;/p&gt;
&lt;h2 id=&#34;注释和字符&#34;&gt;注释和字符
&lt;/h2&gt;&lt;h3 id=&#34;注释&#34;&gt;注释
&lt;/h3&gt;&lt;p&gt;代码注释是为了提高代码的可读性和维护性。通过注释，在代码中记录下有关代码逻辑、目的、使用方法等信息，方便自己或其他人在后续的代码维护和修改过程中理解代码的意图&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单行注释：采用 # 开头， 表示这一行的内容是注释，不会被 Python 解释器执行&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 定义变量 x 并赋值为 10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;多行注释：使用三个引号（&amp;lsquo;&amp;lsquo;&amp;lsquo;注释&amp;rsquo;&amp;rsquo;&amp;rsquo; 或 &amp;ldquo;&amp;ldquo;&amp;ldquo;注释&amp;rdquo;&amp;quot;&amp;quot;）包裹&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;这是一个多行注释
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;可以用于较长的说明
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Docstring（文档字符串） ：文档字符串是 Python 特有的一种注释方式，通常用于函数、类或模块的说明。文档字符串也是使用三个引号包裹，但它们是用来生成文档的，而不仅仅是注释&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    这个函数用于两个数字的加法运算。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    参数:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    a -- 第一个加数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    b -- 第二个加数
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    返回值:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    两个加数的和
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Tips：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注释应尽量简洁明了，描述清楚代码的意图。&lt;/li&gt;
&lt;li&gt;对于复杂的代码逻辑，建议使用详细的注释，以帮助理解代码。&lt;/li&gt;
&lt;li&gt;注释和代码之间保持适当的空白，以提高可读性&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;字符串&#34;&gt;字符串
&lt;/h3&gt;&lt;p&gt;字符串是 Python 中一种非常重要的数据类型，用于表示和处理文本信息。字符串可以使用单引号、双引号或者三引号来定义，具体的选择取决于你所处理的文本内容。下面详细介绍字符串的各种定义方式及其使用方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单引号、双引号定义单行字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ZephyrBD”   &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;好好学习，天天向上&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 使用单引号和双引号进行字符串定义没有任何区别。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 当单引号是字符串的一部分时用双引号定义字符串，反之亦然。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;2、 三引号定义多行字符串定义（字符串跨行的时候使用）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;info&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;一大段多行字符串
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;第二行，bababa
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;第三行，6666
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;PS：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码中所有的标点符号都要用英文格式的&lt;/li&gt;
&lt;li&gt;字符串中有单引号时（外面得双引号包裹）&lt;/li&gt;
&lt;li&gt;字符串中有双引号时（外面得单引号包裹）&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Python开发环境的搭建</title>
        <link>https://zephyrbd.github.io/p/pythondev_1/</link>
        <pubDate>Sat, 18 Jan 2025 00:00:00 +0000</pubDate>
        
        <guid>https://zephyrbd.github.io/p/pythondev_1/</guid>
        <description>&lt;img src="https://zephyrbd.github.io/images/Pydev/dev1/img0.png" alt="Featured image of post Python开发环境的搭建" /&gt;&lt;h2 id=&#34;python下载和安装&#34;&gt;Python下载和安装
&lt;/h2&gt;&lt;h3 id=&#34;下载-python&#34;&gt;下载 Python
&lt;/h3&gt;&lt;p&gt;打开&lt;a class=&#34;link&#34; href=&#34;https://www.python.org/downloads/windows/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官网&lt;/a&gt;，点击下载(选择自己的电脑系统)&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img1&#34;
	
	
&gt;
选择安装版本，点击下载（左侧为长期稳定的版本）&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img2&#34;
	
	
&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img3.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img3&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装python&#34;&gt;安装Python
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;运行安装程序&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img4.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img4&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;选择指定路径安装&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img5.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img5&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;点击下一步，指定安装路径&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img6&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;点击安装，等待安装成功&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img7.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img7&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;安装成功的提示页面&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img8.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img8&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;python-的交互环境&#34;&gt;Python 的交互环境
&lt;/h3&gt;&lt;p&gt;python 安装好之后如何使用呢？&lt;br&gt;
打开 cmd 命令行，输入：&lt;code&gt;python&lt;/code&gt;，即可运行python解释器(程序)，进入到 python 的交互环境中&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img9&#34;
	
	
&gt;&lt;br&gt;
交互环境在进行程序开发的时候，很少会使用到，&lt;br&gt;
输入 Python 能看到版本信息，说明已经安装成功了就可以啦。&lt;/p&gt;
&lt;h2 id=&#34;pycharm的下载和安装&#34;&gt;Pycharm的下载和安装
&lt;/h2&gt;&lt;h3 id=&#34;下载安装包&#34;&gt;下载安装包
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PyCharm专业版是收费软件，&lt;/strong&gt; 安装之后需要使用激活码激活才可以用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PyCharm专业版对在校大学生免费授权(最推荐)，&lt;/strong&gt; 可以去官网了解。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PyCharm社区版是免费的(推荐)，&lt;/strong&gt; 对于初学者可以先使用社区版进行学习，社区版编写 python 代码功能完整足够，没必要在学习初期给自己增加学习的摩擦力，等到后面基础语法熟练了，pycharm 的基本使用熟悉了，要进行项目开发的时候，再去使用专业版。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jetbrains.com.cn/pycharm/download/?section=windows&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PyCharm下载地址&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击下载专业版&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img10.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img10&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;点击下载社区版&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img11.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img11&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;下载的安装包&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img12.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img12&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安装-pycharm&#34;&gt;安装 PyCharm
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;双击运行安装程序&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img13.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img13&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;指定安装路径&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img14.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img14&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;勾选下面的选项，点击下一步&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img15.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img15&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;点击安装&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img16.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img16&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;安装过程中，等待安装完成即可&lt;br&gt;
&lt;img src=&#34;https://zephyrbd.github.io/images/Pydev/dev1/img17.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img17&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;pycharm-基本使用教程&#34;&gt;PyCharm 基本使用教程
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;PyCharm&lt;/strong&gt; 是一个集成开发环境 (IDE)，专门用于 Python 编程。对于初学者来说，PyCharm 社区版已经足够用于学习和开发基础项目。本节将带你一步步熟悉 PyCharm 的基本使用，包括项目创建、解释器配置、文件与文件夹的创建、代码运行，以及项目的退出和切换。&lt;/p&gt;
&lt;h3 id=&#34;项目创建&#34;&gt;项目创建
&lt;/h3&gt;&lt;p&gt;在 PyCharm 中，项目是一个文件夹，包含你所有的代码文件、资源文件和配置文件。每个项目都可以有自己的设置和虚拟环境。
&lt;strong&gt;步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 PyCharm，选择 New Project。&lt;/li&gt;
&lt;li&gt;在弹出的窗口中，选择项目的保存位置。&lt;/li&gt;
&lt;li&gt;为项目指定一个名称，并选择 Python 解释器（如未设置，可在后面配置）。&lt;/li&gt;
&lt;li&gt;点击 Create，项目就会被创建。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;PS：建议将项目保存在一个易于管理的位置，方便后续查找和管理。&lt;/p&gt;
&lt;h3 id=&#34;解释器的配置&#34;&gt;解释器的配置
&lt;/h3&gt;&lt;p&gt;Python 解释器是运行 Python 代码的核心组件。在 PyCharm 中，每个项目可以使用不同的解释器（如系统 Python 或虚拟环境中的 Python）。&lt;br&gt;
&lt;strong&gt;配置步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在创建项目时，如果未选择解释器，可以通过 File -&amp;gt; Settings -&amp;gt; Project: [Your Project Name] -&amp;gt; Python Interpreter 进行配置。&lt;/li&gt;
&lt;li&gt;在解释器列表中，选择合适的解释器。如果没有合适的解释器，可以通过 Add Interpreter 添加一个新的 Python 解释器。&lt;/li&gt;
&lt;li&gt;选择解释器后，点击 OK 保存设置。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;PS：建议初学者使用系统自带的 Python 解释器，或者为每个项目创建一个虚拟环境，以确保依赖包的独立性。&lt;/p&gt;
&lt;h3 id=&#34;文件和文件夹的创建&#34;&gt;文件和文件夹的创建
&lt;/h3&gt;&lt;p&gt;在 PyCharm 中，你可以轻松地创建文件和文件夹，以组织你的代码和资源。&lt;br&gt;
&lt;strong&gt;创建步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在项目视图的侧栏中，右键点击项目名称或一个文件夹。&lt;/li&gt;
&lt;li&gt;选择 New，然后选择 Python File 创建一个新的 Python 文件，或选择 Directory 创建一个新的文件夹。&lt;/li&gt;
&lt;li&gt;为新文件或文件夹命名后，点击 Enter。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;PS：文件命名应遵循 Python 命名规则（如使用下划线连接单词，尽量不要用中文）。&lt;/p&gt;
&lt;h3 id=&#34;代码的运行&#34;&gt;代码的运行
&lt;/h3&gt;&lt;p&gt;在 PyCharm 中运行代码非常简单。你可以运行单个文件或整个项目中的多个文件。&lt;br&gt;
&lt;strong&gt;运行步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确保你已经在项目中创建了一个 Python 文件，并且文件中有可运行的代码。&lt;/li&gt;
&lt;li&gt;打开你要运行的文件，然后右键点击编辑器中的代码区域，选择 Run &amp;lsquo;文件名&amp;rsquo;。&lt;/li&gt;
&lt;li&gt;PyCharm 将在下方的 Run 窗口中显示运行结果和输出信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;PS：你可以使用快捷键 Shift + F10 快速运行代码。&lt;/p&gt;
&lt;h3 id=&#34;项目的退出和切换&#34;&gt;项目的退出和切换
&lt;/h3&gt;&lt;p&gt;当你完成一个项目的工作或想要切换到另一个项目时，你可以轻松地在 PyCharm 中退出当前项目或切换到另一个项目。&lt;br&gt;
&lt;strong&gt;退出项目：&lt;/strong&gt;&lt;br&gt;
关闭 PyCharm 窗口即可退出当前项目。&lt;br&gt;
下次打开 PyCharm 时，会自动加载上次关闭时的项目。&lt;br&gt;
&lt;strong&gt;切换项目：&lt;/strong&gt;&lt;br&gt;
在 PyCharm 中，点击 File -&amp;gt; Open，然后选择另一个项目的目录。&lt;br&gt;
你可以选择在当前窗口打开新项目，或在新窗口中打开。&lt;/p&gt;
&lt;p&gt;PS：建议每次只在一个项目中工作，避免多个项目同时打开造成的资源占用和混乱。&lt;/p&gt;
&lt;h3 id=&#34;中文翻译插件安装&#34;&gt;中文翻译插件安装
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开 PyCharm：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动 PyCharm，打开你的项目。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入插件市场：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在顶部菜单栏中，点击 File，然后选择 Settings（在 macOS 上是 PyCharm -&amp;gt; Preferences）。&lt;/li&gt;
&lt;li&gt;在设置窗口的左侧菜单中，选择 Plugins。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;搜索插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在右上角的搜索框中输入 Translation 或 中文翻译 关键词。&lt;/li&gt;
&lt;li&gt;常用的翻译插件有 Translation 或 Chinese Localization Plugin。你可以选择 Translation 插件，它支持多种语言的翻译，包括英文到中文。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在搜索结果中找到合适的插件（例如 Translation），然后点击 Install 按钮进行安装。&lt;/li&gt;
&lt;li&gt;安装完成后，可能需要重启 PyCharm 以激活插件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安装汉化插件&#34;&gt;安装汉化插件
&lt;/h3&gt;&lt;p&gt;在 PyCharm 中安装汉化插件（中文语言包）可以使 IDE 的界面变成中文。以下是安装汉化插件的步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打开 PyCharm：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动你的 PyCharm IDE。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入插件市场：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击顶部菜单栏的 File，然后选择 Settings（在 Mac 上为 Preferences）。&lt;/li&gt;
&lt;li&gt;在左侧导航栏中，选择 Plugins。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;搜索汉化插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在插件窗口中，点击右上角的搜索框，输入 Chinese 或 中文。&lt;/li&gt;
&lt;li&gt;你应该能够找到一个名为 &amp;ldquo;Chinese (Simplified) Language Pack / 中文语言包&amp;rdquo; 的插件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;找到插件后，点击 Install 按钮进行安装。&lt;/li&gt;
&lt;li&gt;安装完成后，点击 Restart IDE 以重启 PyCharm 使插件生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切换语言：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重启后，PyCharm 的界面将自动切换为中文。如果没有自动切换，可以在 File -&amp;gt; Settings -&amp;gt; Appearance &amp;amp; Behavior -&amp;gt; Appearance 中检查语言设置，确保语言包已应用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
